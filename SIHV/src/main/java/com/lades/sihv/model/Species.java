package com.lades.sihv.model;
// Generated 04/10/2018 16:09:37 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Species generated by hbm2java
 */
@Entity
@Table(name="species"
    ,catalog="bd_sihv"
)
public class Species  implements java.io.Serializable {


     private SpeciesId id;
     private Genre genre;
     private String nameSpecies;
     private Date dataSpeciesRegister;
     private Set raceses = new HashSet(0);

    public Species() {
    }

	
    public Species(SpeciesId id, Genre genre, String nameSpecies, Date dataSpeciesRegister) {
        this.id = id;
        this.genre = genre;
        this.nameSpecies = nameSpecies;
        this.dataSpeciesRegister = dataSpeciesRegister;
    }
    public Species(SpeciesId id, Genre genre, String nameSpecies, Date dataSpeciesRegister, Set raceses) {
       this.id = id;
       this.genre = genre;
       this.nameSpecies = nameSpecies;
       this.dataSpeciesRegister = dataSpeciesRegister;
       this.raceses = raceses;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="pkSpecies", column=@Column(name="PK_species", nullable=false) ), 
        @AttributeOverride(name="genrePkGenre", column=@Column(name="genre_PK_genre", nullable=false) ), 
        @AttributeOverride(name="genreOrderPkOrder", column=@Column(name="genre_order_PK_order", nullable=false) ), 
        @AttributeOverride(name="genreOrderClassAnimalPkClassAnimal", column=@Column(name="genre_order_classAnimal_PK_classAnimal", nullable=false) ) } )
    public SpeciesId getId() {
        return this.id;
    }
    
    public void setId(SpeciesId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="genre_PK_genre", referencedColumnName="PK_genre", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="genre_order_PK_order", referencedColumnName="order_PK_order", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="genre_order_classAnimal_PK_classAnimal", referencedColumnName="order_classAnimal_PK_classAnimal", nullable=false, insertable=false, updatable=false) } )
    public Genre getGenre() {
        return this.genre;
    }
    
    public void setGenre(Genre genre) {
        this.genre = genre;
    }

    
    @Column(name="nameSpecies", nullable=false, length=100)
    public String getNameSpecies() {
        return this.nameSpecies;
    }
    
    public void setNameSpecies(String nameSpecies) {
        this.nameSpecies = nameSpecies;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataSpeciesRegister", nullable=false, length=19)
    public Date getDataSpeciesRegister() {
        return this.dataSpeciesRegister;
    }
    
    public void setDataSpeciesRegister(Date dataSpeciesRegister) {
        this.dataSpeciesRegister = dataSpeciesRegister;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="species")
    public Set getRaceses() {
        return this.raceses;
    }
    
    public void setRaceses(Set raceses) {
        this.raceses = raceses;
    }




}


