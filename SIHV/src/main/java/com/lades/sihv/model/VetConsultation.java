package com.lades.sihv.model;
// Generated 10/12/2018 16:25:52 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * VetConsultation generated by hbm2java
 */
@Entity
@Table(name="vetConsultation"
    ,catalog="bd_sihv"
)
public class VetConsultation  implements java.io.Serializable {


     private Integer pkVetConsultation;
     private OwnersHasAnimals ownersHasAnimals;
     private Scheduling scheduling;
     private Users users;
     private BigDecimal discountValue;
     private String diagPresuntivo;
     private String diagDiferencial;
     private String diagDefinitivo;
     private Date applicationDate;
     private Set exameFisicos = new HashSet(0);
     private Set exameImages = new HashSet(0);
     private Set proceduresApplieds = new HashSet(0);
     private Set sisRespCardios = new HashSet(0);
     private Set sisUrinarioMamarias = new HashSet(0);
     private Set sisDigestorios = new HashSet(0);
     private Set anamneses = new HashSet(0);
     private Set sisMuscEsques = new HashSet(0);
     private Set sisOftalmicos = new HashSet(0);
     private Set sisTegumentars = new HashSet(0);
     private Set sisNeurologicos = new HashSet(0);

    public VetConsultation() {
    }

	
    public VetConsultation(OwnersHasAnimals ownersHasAnimals, Scheduling scheduling, Users users, BigDecimal discountValue, String diagPresuntivo, String diagDiferencial, Date applicationDate) {
        this.ownersHasAnimals = ownersHasAnimals;
        this.scheduling = scheduling;
        this.users = users;
        this.discountValue = discountValue;
        this.diagPresuntivo = diagPresuntivo;
        this.diagDiferencial = diagDiferencial;
        this.applicationDate = applicationDate;
    }
    public VetConsultation(OwnersHasAnimals ownersHasAnimals, Scheduling scheduling, Users users, BigDecimal discountValue, String diagPresuntivo, String diagDiferencial, String diagDefinitivo, Date applicationDate, Set exameFisicos, Set exameImages, Set proceduresApplieds, Set sisRespCardios, Set sisUrinarioMamarias, Set sisDigestorios, Set anamneses, Set sisMuscEsques, Set sisOftalmicos, Set sisTegumentars, Set sisNeurologicos) {
       this.ownersHasAnimals = ownersHasAnimals;
       this.scheduling = scheduling;
       this.users = users;
       this.discountValue = discountValue;
       this.diagPresuntivo = diagPresuntivo;
       this.diagDiferencial = diagDiferencial;
       this.diagDefinitivo = diagDefinitivo;
       this.applicationDate = applicationDate;
       this.exameFisicos = exameFisicos;
       this.exameImages = exameImages;
       this.proceduresApplieds = proceduresApplieds;
       this.sisRespCardios = sisRespCardios;
       this.sisUrinarioMamarias = sisUrinarioMamarias;
       this.sisDigestorios = sisDigestorios;
       this.anamneses = anamneses;
       this.sisMuscEsques = sisMuscEsques;
       this.sisOftalmicos = sisOftalmicos;
       this.sisTegumentars = sisTegumentars;
       this.sisNeurologicos = sisNeurologicos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="PK_vetConsultation", unique=true, nullable=false)
    public Integer getPkVetConsultation() {
        return this.pkVetConsultation;
    }
    
    public void setPkVetConsultation(Integer pkVetConsultation) {
        this.pkVetConsultation = pkVetConsultation;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ownersHasAnimals_PK_ownersHasAnimals", nullable=false)
    public OwnersHasAnimals getOwnersHasAnimals() {
        return this.ownersHasAnimals;
    }
    
    public void setOwnersHasAnimals(OwnersHasAnimals ownersHasAnimals) {
        this.ownersHasAnimals = ownersHasAnimals;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="scheduling_Pk_schedule", nullable=false)
    public Scheduling getScheduling() {
        return this.scheduling;
    }
    
    public void setScheduling(Scheduling scheduling) {
        this.scheduling = scheduling;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="users_PK_user", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="discountValue", nullable=false, precision=6)
    public BigDecimal getDiscountValue() {
        return this.discountValue;
    }
    
    public void setDiscountValue(BigDecimal discountValue) {
        this.discountValue = discountValue;
    }

    
    @Column(name="diagPresuntivo", nullable=false, length=254)
    public String getDiagPresuntivo() {
        return this.diagPresuntivo;
    }
    
    public void setDiagPresuntivo(String diagPresuntivo) {
        this.diagPresuntivo = diagPresuntivo;
    }

    
    @Column(name="diagDiferencial", nullable=false, length=254)
    public String getDiagDiferencial() {
        return this.diagDiferencial;
    }
    
    public void setDiagDiferencial(String diagDiferencial) {
        this.diagDiferencial = diagDiferencial;
    }

    
    @Column(name="diagDefinitivo", length=254)
    public String getDiagDefinitivo() {
        return this.diagDefinitivo;
    }
    
    public void setDiagDefinitivo(String diagDefinitivo) {
        this.diagDefinitivo = diagDefinitivo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="applicationDate", nullable=false, length=19)
    public Date getApplicationDate() {
        return this.applicationDate;
    }
    
    public void setApplicationDate(Date applicationDate) {
        this.applicationDate = applicationDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getExameFisicos() {
        return this.exameFisicos;
    }
    
    public void setExameFisicos(Set exameFisicos) {
        this.exameFisicos = exameFisicos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getExameImages() {
        return this.exameImages;
    }
    
    public void setExameImages(Set exameImages) {
        this.exameImages = exameImages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getProceduresApplieds() {
        return this.proceduresApplieds;
    }
    
    public void setProceduresApplieds(Set proceduresApplieds) {
        this.proceduresApplieds = proceduresApplieds;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getSisRespCardios() {
        return this.sisRespCardios;
    }
    
    public void setSisRespCardios(Set sisRespCardios) {
        this.sisRespCardios = sisRespCardios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getSisUrinarioMamarias() {
        return this.sisUrinarioMamarias;
    }
    
    public void setSisUrinarioMamarias(Set sisUrinarioMamarias) {
        this.sisUrinarioMamarias = sisUrinarioMamarias;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getSisDigestorios() {
        return this.sisDigestorios;
    }
    
    public void setSisDigestorios(Set sisDigestorios) {
        this.sisDigestorios = sisDigestorios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getAnamneses() {
        return this.anamneses;
    }
    
    public void setAnamneses(Set anamneses) {
        this.anamneses = anamneses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getSisMuscEsques() {
        return this.sisMuscEsques;
    }
    
    public void setSisMuscEsques(Set sisMuscEsques) {
        this.sisMuscEsques = sisMuscEsques;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getSisOftalmicos() {
        return this.sisOftalmicos;
    }
    
    public void setSisOftalmicos(Set sisOftalmicos) {
        this.sisOftalmicos = sisOftalmicos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getSisTegumentars() {
        return this.sisTegumentars;
    }
    
    public void setSisTegumentars(Set sisTegumentars) {
        this.sisTegumentars = sisTegumentars;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vetConsultation")
    public Set getSisNeurologicos() {
        return this.sisNeurologicos;
    }
    
    public void setSisNeurologicos(Set sisNeurologicos) {
        this.sisNeurologicos = sisNeurologicos;
    }




}


