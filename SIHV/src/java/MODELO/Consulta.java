package MODELO;
// Generated 27/10/2016 10:35:02 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Consulta generated by hbm2java
 */
@Entity
@Table(name="consulta"
    ,catalog="BD_SIHV"
)
public class Consulta  implements java.io.Serializable {


     private Integer pkConsulta;
     private Adm adm;
     private Animais animais;
     private Date dataConsulta;
     private String sistemasAfetados;
     private Set<SisRespCardio> sisRespCardios = new HashSet<SisRespCardio>(0);
     private Set<SisDigestorio> sisDigestorios = new HashSet<SisDigestorio>(0);
     private Set<Anamnese> anamneses = new HashSet<Anamnese>(0);

    public Consulta() {
    }

	
    public Consulta(Adm adm, Animais animais, Date dataConsulta) {
        this.adm = adm;
        this.animais = animais;
        this.dataConsulta = dataConsulta;
    }
    public Consulta(Adm adm, Animais animais, Date dataConsulta, String sistemasAfetados, Set<SisRespCardio> sisRespCardios, Set<SisDigestorio> sisDigestorios, Set<Anamnese> anamneses) {
       this.adm = adm;
       this.animais = animais;
       this.dataConsulta = dataConsulta;
       this.sistemasAfetados = sistemasAfetados;
       this.sisRespCardios = sisRespCardios;
       this.sisDigestorios = sisDigestorios;
       this.anamneses = anamneses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="PK_consulta", unique=true, nullable=false)
    public Integer getPkConsulta() {
        return this.pkConsulta;
    }
    
    public void setPkConsulta(Integer pkConsulta) {
        this.pkConsulta = pkConsulta;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="adm_PK_adm", referencedColumnName="PK_adm", nullable=false), 
        @JoinColumn(name="adm_FK_pessoa", referencedColumnName="FK_pessoa", nullable=false) } )
    public Adm getAdm() {
        return this.adm;
    }
    
    public void setAdm(Adm adm) {
        this.adm = adm;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="animais_PK_animal", referencedColumnName="PK_animal", nullable=false), 
        @JoinColumn(name="animais_cliente_FK_cliente", referencedColumnName="cliente_FK_cliente", nullable=false), 
        @JoinColumn(name="animais_cliente_FK_pessoa", referencedColumnName="cliente_FK_pessoa", nullable=false) } )
    public Animais getAnimais() {
        return this.animais;
    }
    
    public void setAnimais(Animais animais) {
        this.animais = animais;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DataConsulta", nullable=false, length=19)
    public Date getDataConsulta() {
        return this.dataConsulta;
    }
    
    public void setDataConsulta(Date dataConsulta) {
        this.dataConsulta = dataConsulta;
    }

    
    @Column(name="SistemasAfetados", length=500)
    public String getSistemasAfetados() {
        return this.sistemasAfetados;
    }
    
    public void setSistemasAfetados(String sistemasAfetados) {
        this.sistemasAfetados = sistemasAfetados;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="consulta")
    public Set<SisRespCardio> getSisRespCardios() {
        return this.sisRespCardios;
    }
    
    public void setSisRespCardios(Set<SisRespCardio> sisRespCardios) {
        this.sisRespCardios = sisRespCardios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="consulta")
    public Set<SisDigestorio> getSisDigestorios() {
        return this.sisDigestorios;
    }
    
    public void setSisDigestorios(Set<SisDigestorio> sisDigestorios) {
        this.sisDigestorios = sisDigestorios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="consulta")
    public Set<Anamnese> getAnamneses() {
        return this.anamneses;
    }
    
    public void setAnamneses(Set<Anamnese> anamneses) {
        this.anamneses = anamneses;
    }




}


